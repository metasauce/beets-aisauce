name: python checks

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    # Get changed files and store them in outputs
    changed-files:
        runs-on: ubuntu-latest
        name: Get changed files
        outputs:
            any_python_changed: ${{ steps.raw-changed-python-files.outputs.any_changed }}
            changed_python_files: ${{ steps.changed-python-files.outputs.all_changed_files }}
        steps:
            - uses: actions/checkout@v4
            - name: Get changed python files
              id: raw-changed-python-files
              uses: tj-actions/changed-files@v46
              with:
                  files: |
                      **.py
            - name: Check changed python files
              id: changed-python-files
              env:
                  CHANGED_PYTHON_FILES: ${{ steps.raw-changed-python-files.outputs.all_changed_files }}
              run: |
                  echo "all_changed_files=$CHANGED_PYTHON_FILES" >> "$GITHUB_OUTPUT"

    ruff:
        name: Check style with Ruff
        runs-on: ubuntu-latest
        needs: changed-files
        if: needs.changed-files.outputs.any_python_changed == 'true'
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python 3.12
              uses: actions/setup-python@v5
              with:
                  python-version: 3.12
                  cache: "pip"
            - name: Install dependencies
              run: |
                  pip install ruff
            - name: Check style with Ruff
              id: ruff
              run: |
                  ruff check --output-format=github .

    mypy:
        name: Check type hints with mypy
        runs-on: ubuntu-latest
        needs: changed-files
        if: needs.changed-files.outputs.any_python_changed == 'true'
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python 3.12
              uses: actions/setup-python@v5
              with:
                  python-version: 3.12
                  cache: "pip"
            - name: Install dependencies
              run: |
                  pip install .[typed]
            - name: Check type hints with mypy
              id: mypy
              run: |
                  mypy --show-error-codes --check-untyped-defs --config-file ./pyproject.toml ./

    test:
        name: Run tests
        runs-on: ubuntu-latest
        needs: changed-files
        if: needs.changed-files.outputs.any_python_changed == 'true'
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        env:
            IS_MAIN_PYTHON: ${{ matrix.python-version == '3.12' }}
            PYTEST_ADDOPTS: "--color=yes"
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}
                  cache: "pip"
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install .[test]

            - if: ${{ env.IS_MAIN_PYTHON != 'true' }}
              name: Test without coverage
              run: |
                  pytest -v

            - if: ${{ env.IS_MAIN_PYTHON == 'true' }}
              name: Test with coverage
              run: |
                  coverage run -m pytest -v

            - if: ${{ env.IS_MAIN_PYTHON == 'true' }}
              name: Store the coverage report
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-report
                  path: .reports/coverage.xml

    # Uncomment the following section to enable coverage upload to Codecov, needs a Codecov token set in the repository secrets.
    #upload-coverage:
    #    name: Upload coverage report
    #    needs: test
    #    runs-on: ubuntu-latest
    #    permissions:
    #        id-token: write
    #    steps:
    #        - uses: actions/checkout@v4
    #
    #        - name: Get the coverage report
    #          uses: actions/download-artifact@v4
    #          with:
    #              name: coverage-report
    #
    #        - name: Upload code coverage
    #          uses: codecov/codecov-action@v5
    #          with:
    #              files: ./coverage.xml
    #              use_oidc: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) }}

    # TODO: Autorelease on version bump
